// Notification translations for multilingual support

interface NotificationContent {
  title: string;
  content: string;
}

const translations = {
  en: {
    // Validation reminders
    'validation_reminder_property': {
      title: 'Confirm Your Property Listing',
      content: (propertyTitle: string, validationUrl?: string) => `Please confirm that your property "${propertyTitle}" is still available. ${validationUrl ? `Click here to validate: ${validationUrl}` : 'Click to validate'} within 24 hours or it will be deactivated.`
    },
    'validation_reminder_requirement': {
      title: 'Confirm Your Property Requirement',
      content: (requirementTitle: string, validationUrl?: string) => `Please confirm that your requirement "${requirementTitle}" is still active. ${validationUrl ? `Click here to validate: ${validationUrl}` : 'Click to validate'} within 24 hours or it will be deactivated.`
    },
    
    // Deactivation notifications
    'listing_deactivated_property': {
      title: 'Property Listing Deactivated',
      content: (propertyTitle: string) => `Your property "${propertyTitle}" has been deactivated due to missed validation. You can reactivate it anytime from your listings.`
    },
    'requirement_deactivated': {
      title: 'Requirement Deactivated',
      content: (requirementTitle: string) => `Your requirement "${requirementTitle}" has been deactivated due to missed validation. You can reactivate it anytime from your requirements.`
    },
    
    // Validation confirmed
    'validation_confirmed_property': {
      title: 'Property Listing Confirmed',
      content: (propertyTitle: string) => `Thank you for confirming your property "${propertyTitle}". Your listing remains active.`
    },
    'validation_confirmed_requirement': {
      title: 'Requirement Confirmed',
      content: (requirementTitle: string) => `Thank you for confirming your requirement "${requirementTitle}". Your requirement remains active.`
    },
    
    // Match notifications
    'latest_matches_property': {
      title: 'Latest property matches (80%+)',
      content: (matchCount: number) => `Found ${matchCount} properties matching your requirements with 80%+ compatibility. Click to view your latest matches.`
    },
    'latest_matches_requirement': {
      title: 'Latest requirement matches (80%+)',
      content: (matchCount: number) => `Found ${matchCount} buyer requirements matching your properties with 80%+ compatibility. Click to view your latest matches.`
    },
    
    // Instant match notifications
    'property_match_single': {
      title: 'ЁЯПа New Property Match Found!',
      content: (propertyTitle: string, requirementTitle: string, compatibility: number) => `New property "${propertyTitle}" matches your requirement "${requirementTitle}" with ${Math.round(compatibility)}% compatibility!`
    },
    'property_match_multiple': {
      title: (count: number) => `ЁЯПа ${count} New Property Matches Found!`,
      content: (propertyTitles: string, topCompatibility: number) => `New properties matching your requirements: ${propertyTitles}. Top compatibility: ${Math.round(topCompatibility)}%`
    },
    'requirement_match_single': {
      title: 'ЁЯФН New Requirement Match Found!',
      content: (requirementTitle: string, propertyTitle: string, compatibility: number) => `New requirement "${requirementTitle}" matches your property "${propertyTitle}" with ${Math.round(compatibility)}% compatibility!`
    },
    'requirement_match_multiple': {
      title: (count: number) => `ЁЯФН ${count} Properties Match New Requirement!`,
      content: (requirementTitle: string, topCompatibility: number) => `Your properties match the new requirement "${requirementTitle}". Top compatibility: ${Math.round(topCompatibility)}%`
    },
    
    // Verification notifications
    'verification_approved': {
      title: 'Property Verification Approved',
      content: (propertyTitle: string) => `Your ownership verification for "${propertyTitle}" has been approved.`
    },
    'verification_rejected': {
      title: 'Property Verification Rejected',
      content: (propertyTitle: string, reason?: string) => `Your ownership verification for "${propertyTitle}" was rejected. Reason: ${reason || 'Documents did not meet verification requirements.'}`
    },
    'verification_request': {
      title: 'New Ownership Verification Request',
      content: (propertyTitle: string) => `A new property verification request has been submitted for "${propertyTitle}".`
    },
    
    // Message notifications
    'message': {
      title: 'New Message',
      content: (subject: string) => `You have a new message about ${subject}`
    }
  },
  
  th: {
    // Validation reminders
    'validation_reminder_property': {
      title: 'р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Вр╕▓р╕вр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Вр╕нр╕Зр╕Др╕╕р╕У',
      content: (propertyTitle: string, validationUrl?: string) => `р╕Бр╕гр╕╕р╕Ур╕▓р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕зр╣Ир╕▓р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М "${propertyTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕вр╕▒р╕Зр╕Юр╕гр╣Йр╕нр╕бр╕Вр╕▓р╕в ${validationUrl ? `р╕Др╕ер╕┤р╕Бр╕Чр╕╡р╣Ир╕Щр╕╡р╣Ир╣Ар╕Юр╕╖р╣Ир╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щ: ${validationUrl}` : 'р╕Др╕ер╕┤р╕Бр╣Ар╕Юр╕╖р╣Ир╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щ'} р╕ар╕▓р╕вр╣Гр╕Щ 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З р╕лр╕гр╕╖р╕нр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Ир╕░р╕Цр╕╣р╕Бр╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ`
    },
    'validation_reminder_requirement': {
      title: 'р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Лр╕╖р╣Йр╕нр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Вр╕нр╕Зр╕Др╕╕р╕У',
      content: (requirementTitle: string, validationUrl?: string) => `р╕Бр╕гр╕╕р╕Ур╕▓р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕зр╣Ир╕▓р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г "${requirementTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕вр╕▒р╕Зр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕нр╕вр╕╣р╣И ${validationUrl ? `р╕Др╕ер╕┤р╕Бр╕Чр╕╡р╣Ир╕Щр╕╡р╣Ир╣Ар╕Юр╕╖р╣Ир╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щ: ${validationUrl}` : 'р╕Др╕ер╕┤р╕Бр╣Ар╕Юр╕╖р╣Ир╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щ'} р╕ар╕▓р╕вр╣Гр╕Щ 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З р╕лр╕гр╕╖р╕нр╕Ир╕░р╕Цр╕╣р╕Бр╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ`
    },
    
    // Deactivation notifications
    'listing_deactivated_property': {
      title: 'р╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Вр╕▓р╕вр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Цр╕╣р╕Бр╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ',
      content: (propertyTitle: string) => `р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М "${propertyTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕Цр╕╣р╕Бр╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Ар╕Щр╕╖р╣Ир╕нр╕Зр╕Ир╕▓р╕Бр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕вр╕╖р╕Щр╕вр╕▒р╕Щ р╕Др╕╕р╕Ур╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Гр╕лр╕бр╣Ир╣Др╕Фр╣Йр╕Хр╕ер╕нр╕Фр╣Ар╕зр╕ер╕▓р╕Ир╕▓р╕Бр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Вр╕нр╕Зр╕Др╕╕р╕У`
    },
    'requirement_deactivated': {
      title: 'р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Цр╕╣р╕Бр╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ',
      content: (requirementTitle: string) => `р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г "${requirementTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕Цр╕╣р╕Бр╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Ар╕Щр╕╖р╣Ир╕нр╕Зр╕Ир╕▓р╕Бр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕вр╕╖р╕Щр╕вр╕▒р╕Щ р╕Др╕╕р╕Ур╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Гр╕лр╕бр╣Ир╣Др╕Фр╣Йр╕Хр╕ер╕нр╕Фр╣Ар╕зр╕ер╕▓р╕Ир╕▓р╕Бр╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Вр╕нр╕Зр╕Др╕╕р╕У`
    },
    
    // Validation confirmed
    'validation_confirmed_property': {
      title: 'р╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Вр╕▓р╕вр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╣Бр╕ер╣Йр╕з',
      content: (propertyTitle: string) => `р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М "${propertyTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕У р╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕вр╕▒р╕Зр╕Др╕Зр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕нр╕вр╕╣р╣И`
    },
    'validation_confirmed_requirement': {
      title: 'р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╣Бр╕ер╣Йр╕з',
      content: (requirementTitle: string) => `р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г "${requirementTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕У р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕вр╕▒р╕Зр╕Др╕Зр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕нр╕вр╕╣р╣И`
    },
    
    // Match notifications
    'latest_matches_property': {
      title: 'р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щр╕ер╣Ир╕▓р╕кр╕╕р╕Ф (80%+)',
      content: (matchCount: number) => `р╕Юр╕Ъ ${matchCount} р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Вр╕нр╕Зр╕Др╕╕р╕У 80%+ р╕Др╕ер╕┤р╕Бр╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╣р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щр╕ер╣Ир╕▓р╕кр╕╕р╕Ф`
    },
    'latest_matches_requirement': {
      title: 'р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щр╕ер╣Ир╕▓р╕кр╕╕р╕Ф (80%+)',
      content: (matchCount: number) => `р╕Юр╕Ъ ${matchCount} р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Вр╕нр╕Зр╕Др╕╕р╕У 80%+ р╕Др╕ер╕┤р╕Бр╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╣р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щр╕ер╣Ир╕▓р╕кр╕╕р╕Ф`
    },
    
    // Instant match notifications
    'property_match_single': {
      title: 'ЁЯПа р╕Юр╕Ър╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Гр╕лр╕бр╣Ир╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ!',
      content: (propertyTitle: string, requirementTitle: string, compatibility: number) => `р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Гр╕лр╕бр╣И "${propertyTitle}" р╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г "${requirementTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕У ${Math.round(compatibility)}%!`
    },
    'property_match_multiple': {
      title: (count: number) => `ЁЯПа р╕Юр╕Ъ ${count} р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Гр╕лр╕бр╣Ир╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ!`,
      content: (propertyTitles: string, topCompatibility: number) => `р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Гр╕лр╕бр╣Ир╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Вр╕нр╕Зр╕Др╕╕р╕У: ${propertyTitles} р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╕Бр╕▒р╕Щр╣Др╕Фр╣Йр╕кр╕╣р╕Зр╕кр╕╕р╕Ф: ${Math.round(topCompatibility)}%`
    },
    'requirement_match_single': {
      title: 'ЁЯФН р╕Юр╕Ър╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕лр╕бр╣Ир╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ!',
      content: (requirementTitle: string, propertyTitle: string, compatibility: number) => `р╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕лр╕бр╣И "${requirementTitle}" р╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М "${propertyTitle}" р╕Вр╕нр╕Зр╕Др╕╕р╕У ${Math.round(compatibility)}%!`
    },
    'requirement_match_multiple': {
      title: (count: number) => `ЁЯФН ${count} р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕лр╕бр╣И!`,
      content: (requirementTitle: string, topCompatibility: number) => `р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕лр╕бр╣И "${requirementTitle}" р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╕Бр╕▒р╕Щр╣Др╕Фр╣Йр╕кр╕╣р╕Зр╕кр╕╕р╕Ф: ${Math.round(topCompatibility)}%`
    },
    
    // Verification notifications
    'verification_approved': {
      title: 'р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤',
      content: (propertyTitle: string) => `р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ъ "${propertyTitle}" р╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤р╣Бр╕ер╣Йр╕з`
    },
    'verification_rejected': {
      title: 'р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕Цр╕╣р╕Бр╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш',
      content: (propertyTitle: string, reason?: string) => `р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ъ "${propertyTitle}" р╕Цр╕╣р╕Бр╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш р╣Ар╕лр╕Хр╕╕р╕Ьр╕е: ${reason || 'р╣Ар╕нр╕Бр╕кр╕▓р╕гр╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Хр╕▓р╕бр╕Вр╣Йр╕нр╕Бр╕│р╕лр╕Щр╕Фр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щ'}`
    },
    'verification_request': {
      title: 'р╕Др╕│р╕Вр╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╣Гр╕лр╕бр╣И',
      content: (propertyTitle: string) => `р╕бр╕╡р╕Др╕│р╕Вр╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣Мр╣Гр╕лр╕бр╣Ир╕кр╕│р╕лр╕гр╕▒р╕Ъ "${propertyTitle}"`
    },
    
    // Message notifications
    'message': {
      title: 'р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕лр╕бр╣И',
      content: (subject: string) => `р╕Др╕╕р╕Ур╕бр╕╡р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕лр╕бр╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ъ ${subject}`
    }
  }
};

export interface NotificationTranslationParams {
  type: string;
  subtype?: string;
  propertyTitle?: string;
  requirementTitle?: string;
  matchCount?: number;
  compatibility?: number;
  compatibilityScore?: number;
  propertyTitles?: string;
  topCompatibility?: number;
  reason?: string;
  subject?: string;
  count?: number;
  validationUrl?: string;
}

export function getNotificationContent(
  language: 'en' | 'th',
  params: NotificationTranslationParams
): NotificationContent {
  const lang = translations[language] || translations.en;
  
  // Build the key based on type and subtype
  let key = params.type;
  if (params.subtype) {
    key += `_${params.subtype}`;
  }
  
  const template = lang[key as keyof typeof lang];
  
  if (!template) {
    // Fallback to English if translation not found
    console.warn(`No translation found for ${key} in ${language}, falling back to English`);
    const englishTemplate = translations.en[key as keyof typeof translations.en];
    if (!englishTemplate) {
      return {
        title: 'Notification',
        content: 'You have a new notification'
      };
    }
    return getContentFromTemplate(englishTemplate, params);
  }
  
  return getContentFromTemplate(template, params);
}

function getContentFromTemplate(template: any, params: NotificationTranslationParams): NotificationContent {
  // Handle dynamic titles (functions)
  if (typeof template.title === 'function') {
    return {
      title: template.title(params.count || 1),
      content: template.content(
        params.propertyTitles || params.propertyTitle || '',
        params.topCompatibility || params.compatibility || 0
      )
    };
  }
  
  // Handle different notification types
  // Handle specific notification types with their required parameters
  if (params.type === 'property_match' && params.subtype === 'single') {
    return {
      title: template.title,
      content: template.content(
        params.propertyTitle || '',
        params.requirementTitle || '',
        params.compatibilityScore || 0
      )
    };
  }
  
  if (params.type === 'requirement_match' && params.subtype === 'single') {
    return {
      title: template.title,
      content: template.content(
        params.requirementTitle || '',
        params.propertyTitle || '',
        params.compatibilityScore || 0
      )
    };
  }
  
  return {
    title: template.title,
    content: typeof template.content === 'function' 
      ? template.content(
          params.propertyTitle || params.requirementTitle || params.subject || '',
          params.validationUrl || params.reason || ''
        )
      : template.content
  };
}